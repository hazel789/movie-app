[{"/Users/hazel/movie-app/src/index.js":"1","/Users/hazel/movie-app/src/reportWebVitals.js":"2","/Users/hazel/movie-app/src/App.js":"3","/Users/hazel/movie-app/src/components/Search.js":"4","/Users/hazel/movie-app/src/components/Display.js":"5","/Users/hazel/movie-app/src/pages/Details.js":"6"},{"size":248,"mtime":1639405728052,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1639367958006,"results":"9","hashOfConfig":"8"},{"size":2675,"mtime":1639462725433,"results":"10","hashOfConfig":"8"},{"size":620,"mtime":1639460578831,"results":"11","hashOfConfig":"8"},{"size":1124,"mtime":1639460593411,"results":"12","hashOfConfig":"8"},{"size":2812,"mtime":1639457441228,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lgrcer",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/hazel/movie-app/src/index.js",[],["30","31"],"/Users/hazel/movie-app/src/reportWebVitals.js",[],["32","33"],"/Users/hazel/movie-app/src/App.js",["34","35"],"/Users/hazel/movie-app/src/components/Search.js",[],"/Users/hazel/movie-app/src/components/Display.js",["36","37","38","39"],"import React, { useState } from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport { useParams } from 'react-router-dom'\nimport Details from '../pages/Details';\n\nconst Display = (props) => {\n\n    // let popular = (<div></div>)\n\n    // if (props.searchInput === '') {\n\n        \n    // }\n\n\n    let moviesDisplay=(<div></div>)\n\n    if (!props.fetching && props.movieData.length !== 0) {\n\n        console.log(props.movieData);\n\n        moviesDisplay = props.movieData.results.map((movies, index) => {\n            return (\n                <div className=\"card\">\n                    <Link to={{\n                        pathname: `/${movies.id}`,\n                        }}>\n                        <div key={index} id={movies.id}>{movies.original_title}</div>\n                    <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movies.poster_path}`} alt=''></img>\n                    </Link>\n                </div>\n            )\n        })\n\n    }\n\n        return (\n            <div>\n                {/* {popular} */}\n                {moviesDisplay}\n            </div>\n        )\n}\n\nexport default Display;","/Users/hazel/movie-app/src/pages/Details.js",["40","41","42"],"import React, {useEffect, useState} from 'react';\nimport { useLocation } from \"react-router-dom\";\n\nconst Details = () => {\n\n    const [movieDetails, setMovieDetails] = useState({})\n    const [fetchingReco, setFetchingReco] = useState(false);\n    const [movieRecommendations, setMovieRecommendations] = useState({})\n  \n    const location = useLocation();\n    let movieId = location.pathname\n    let movieID = movieId.replace('/', '')\n    \n    console.log(movieID);\n\n\n    const fetchMovieDetails = async (url) => {\n\n        try {\n            const res = await fetch(url);\n            console.log(res)\n            if (res.status !== 200) {\n                throw new Error('Something went wrong.');\n            }\n\n            setMovieDetails(await res.json());\n        \n        } catch (err) {\n            console.log(err);\n        }\n\n\n        console.log('done loading');\n    }\n\n\n    useEffect(() => {\n\n        const url = (`https://api.themoviedb.org/3/movie/${movieID}?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US`)\n\n        fetchMovieDetails(url);\n            \n    }, [])\n\n\n    const fetchMovieRecommendations = async (url) => {\n\n        try {\n            const res = await fetch(url);\n            console.log(res)\n            if (res.status !== 200) {\n                throw new Error('Something went wrong.');\n            }\n\n            setMovieRecommendations(await res.json());\n            console.log(movieRecommendations)\n        \n        } catch (err) {\n            console.log(err);\n        }\n\n\n        console.log('done loading');\n    }\n\n    let movieRecos = (<div></div>);\n\n    useEffect(() => {\n\n        const url = (`https://api.themoviedb.org/3/movie/${movieID}/recommendations?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US&page=1`)\n\n        fetchMovieRecommendations(url);\n            \n        setFetchingReco(true);\n\n    }, [])\n\n\n    // if (fetchingReco) {\n    //     console.log(movieRecommendations)\n    //     movieRecos = movieRecommendations.results.map((movie) => {\n    //         return (\n    //             <>\n    //                 <h5>{movie.original_title}</h5>\n    //                 <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movie.poster_path}`} alt=''></img>\n    //             </>\n    //         )\n    //     })\n    // }\n\n\nreturn (\n    <div>\n        <h1>{movieDetails.original_title}</h1>\n        <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movieDetails.poster_path}`} alt=''></img>\n        <div className=\"description\">\n            <h4>Release Date: {movieDetails.release_date}</h4>\n            <h5>Overview: <br/> {movieDetails.overview}</h5>\n        </div>\n        <div className=\"recommendations\">\n            <h2>Recommendations:</h2>\n            {movieRecos}\n        </div>\n    </div>\n    )\n}\n\nexport default Details",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":13,"column":10,"nodeType":"51","messageId":"52","endLine":13,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":79,"column":9,"nodeType":"55","endLine":79,"endColumn":19,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"58","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"59","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":19},{"ruleId":"49","severity":1,"message":"60","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":15},{"ruleId":"49","severity":1,"message":"61","line":7,"column":12,"nodeType":"51","messageId":"52","endLine":7,"endColumn":24},{"ruleId":"53","severity":1,"message":"62","line":43,"column":8,"nodeType":"55","endLine":43,"endColumn":10,"suggestions":"63"},{"ruleId":"53","severity":1,"message":"64","line":76,"column":8,"nodeType":"55","endLine":76,"endColumn":10,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchInput'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'useState' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'Details' is defined but never used.","'fetchingReco' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'movieID'. Either include it or remove the dependency array.",["69"],"React Hook useEffect has missing dependencies: 'fetchMovieRecommendations' and 'movieID'. Either include them or remove the dependency array.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [fetching, searchInput]",{"range":"77","text":"78"},"Update the dependencies array to be: [movieID]",{"range":"79","text":"80"},"Update the dependencies array to be: [fetchMovieRecommendations, movieID]",{"range":"81","text":"82"},[1757,1767],"[fetching, searchInput]",[1079,1081],"[movieID]",[1859,1861],"[fetchMovieRecommendations, movieID]"]