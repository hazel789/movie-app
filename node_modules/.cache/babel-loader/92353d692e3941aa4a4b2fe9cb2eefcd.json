{"ast":null,"code":"var _jsxFileName = \"/Users/hazel/movie-app/src/pages/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = () => {\n  _s();\n\n  const [movieDetails, setMovieDetails] = useState({});\n  const [movieRecommendations, setMovieRecommendations] = useState({});\n  const location = useLocation();\n  let movieId = location.pathname;\n  let movieID = movieId.replace('/', '');\n  console.log(movieID);\n\n  const fetchMovieDetails = async url => {\n    try {\n      const res = await fetch(url);\n      console.log(res);\n\n      if (res.status !== 200) {\n        throw new Error('Something went wrong.');\n      }\n\n      setMovieDetails(await res.json());\n    } catch (err) {\n      console.log(err);\n    }\n\n    console.log('done loading');\n  };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/movie/${movieID}?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US`;\n    fetchMovieDetails(url);\n  }, []);\n\n  const fetchMovieRecommendations = async url => {\n    try {\n      const res = await fetch(url);\n      console.log(res);\n\n      if (res.status !== 200) {\n        throw new Error('Something went wrong.');\n      }\n\n      setMovieRecommendations(await res.json());\n      console.log(movieRecommendations);\n    } catch (err) {\n      console.log(err);\n    }\n\n    console.log('done loading');\n  };\n\n  let movieRecos = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/movie/${movieID}/recommendations?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US&page=1`;\n    fetchMovieRecommendations(url);\n  }, []);\n  console.log(movieRecommendations);\n\n  if (movieRecommendations.length !== 0) {\n    movieRecos = movieRecommendations.results.map(movies => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: movies.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://www.themoviedb.org/t/p/w220_and_h330_face/${movies.poster_path}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieDetails.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://www.themoviedb.org/t/p/w220_and_h330_face/${movieDetails.poster_path}`,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Release Date: \", movieDetails.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Overview: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 27\n        }, this), \" \", movieDetails.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommendations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), movieRecos]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Details, \"kdm7t/M5aVHii0bQffOiP7Pqt5A=\", false, function () {\n  return [useLocation];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/hazel/movie-app/src/pages/Details.js"],"names":["React","useEffect","useState","useLocation","Details","movieDetails","setMovieDetails","movieRecommendations","setMovieRecommendations","location","movieId","pathname","movieID","replace","console","log","fetchMovieDetails","url","res","fetch","status","Error","json","err","fetchMovieRecommendations","movieRecos","length","results","map","movies","original_title","poster_path","release_date","overview"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useLocation } from \"react-router-dom\";\n\nconst Details = () => {\n\n    const [movieDetails, setMovieDetails] = useState({})\n    const [movieRecommendations, setMovieRecommendations] = useState({})\n  \n    const location = useLocation();\n    let movieId= location.pathname\n    let movieID = movieId.replace('/', '')\n    \n    console.log(movieID);\n\n\n    const fetchMovieDetails = async (url) => {\n\n    try {\n      const res = await fetch(url);\n      console.log(res)\n      if (res.status !== 200) {\n        throw new Error('Something went wrong.');\n      }\n\n        setMovieDetails(await res.json());\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n\n    console.log('done loading');   \n    }\n\n\n    useEffect(() => {\n\n        const url = (`https://api.themoviedb.org/3/movie/${movieID}?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US`)\n\n        fetchMovieDetails(url);\n            \n    }, [])\n\n\n    const fetchMovieRecommendations = async (url) => {\n\n    try {\n      const res = await fetch(url);\n      console.log(res)\n      if (res.status !== 200) {\n        throw new Error('Something went wrong.');\n      }\n\n        setMovieRecommendations(await res.json());\n        console.log(movieRecommendations)\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n\n    console.log('done loading');   \n    }\n\n    let movieRecos = (<div></div>)\n\n    useEffect(() => {\n\n        const url = (`https://api.themoviedb.org/3/movie/${movieID}/recommendations?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US&page=1`)\n\n        fetchMovieRecommendations(url);\n    }, [])\n\n\n    console.log(movieRecommendations)\n    \n    if (movieRecommendations.length !== 0) {\n        movieRecos = movieRecommendations.results.map((movies) => {\n            return (\n                <>\n                    <h5>{movies.original_title}</h5>\n                    <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movies.poster_path}`} alt=''></img>\n                </>\n            )\n        })\n    }\n\n\nreturn (\n    <div>\n        <h1>{movieDetails.original_title}</h1>\n        <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movieDetails.poster_path}`} alt=''></img>\n        <div className=\"description\">\n            <h4>Release Date: {movieDetails.release_date}</h4>\n            <h5>Overview: <br/> {movieDetails.overview}</h5>\n        </div>\n        <div className=\"recommendations\">\n            <h2>Recommendations:</h2>\n            {movieRecos}\n        </div>\n    </div>\n    )\n}\n\nexport default Details"]},"metadata":{},"sourceType":"module"}