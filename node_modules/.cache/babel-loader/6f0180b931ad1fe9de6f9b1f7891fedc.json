{"ast":null,"code":"var _jsxFileName = \"/Users/hazel/movie-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Search from './components/Search';\nimport Display from './components/Display';\nimport Details from './pages/Details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movieData, setMovieData] = useState('');\n  const [popularMovies, setPopularMovies] = useState('');\n  const [fetchingSearch, setFetchingSearch] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n\n  const fetchPopular = async url => {\n    try {\n      const res = await fetch(url);\n\n      if (res.status !== 200) {\n        throw new Error('something went wrong');\n      }\n\n      setPopularMovies(await res.json());\n      console.log('fetching');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const url = 'https://api.themoviedb.org/3/movie/popular?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US&page=1';\n    fetchPopular(url);\n  }, []);\n\n  const fetchMovies = async url => {\n    try {\n      const res = await fetch(url);\n      console.log(res);\n\n      if (res.status !== 200) {\n        throw new Error('Something went wrong.');\n      }\n\n      setMovieData(await res.json());\n    } catch (err) {\n      console.log(err);\n    }\n\n    setFetchingSearch(false);\n    console.log('done loading');\n  };\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/movie?language=en-US&include_adult=false&page=1&api_key=31a40805676bdd5d1f2295449e6165c1&query=${searchInput}`;\n\n    if (fetchingSearch && searchInput !== '') {\n      fetchMovies(url);\n    }\n  }, [fetchingSearch]);\n\n  let popular = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 18\n  }, this);\n\n  popular = popularMovies.results.map((movies, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: movies.original_title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://www.themoviedb.org/t/p/w220_and_h330_face/${movies.poster_path}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setSearchInput: setSearchInput,\n        setFetchingSearch: setFetchingSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), popular, \";\", /*#__PURE__*/_jsxDEV(Display, {\n        movieData: movieData,\n        fetching: fetchingSearch,\n        popularMovies: popularMovies,\n        searchInput: searchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/:movies\",\n      children: /*#__PURE__*/_jsxDEV(Details, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"9z49oY0Hb+e1Ld10zEv//oFB2nE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hazel/movie-app/src/App.js"],"names":["React","useState","useEffect","Route","Search","Display","Details","App","movieData","setMovieData","popularMovies","setPopularMovies","fetchingSearch","setFetchingSearch","searchInput","setSearchInput","fetchPopular","url","res","fetch","status","Error","json","console","log","err","fetchMovies","popular","results","map","movies","index","original_title","poster_path"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport {Route} from 'react-router-dom';\n\nimport Search from './components/Search';\nimport Display from './components/Display'\nimport Details from './pages/Details'\n\n\nfunction App() {\n\n  const [movieData, setMovieData] = useState('');\n  const [popularMovies, setPopularMovies] = useState('');\n  const [fetchingSearch, setFetchingSearch] = useState(false);\n  const [searchInput, setSearchInput] = useState('')\n\n\n\n  const fetchPopular = async (url) => {\n    try {\n      const res = await fetch(url);\n      if (res.status !== 200) {\n        throw new Error('something went wrong');\n      }\n\n      setPopularMovies(await res.json());\n      console.log('fetching');\n\n    } catch (err) {\n        console.log(err);\n    }\n\n  }\n\n  useEffect(() => {\n    const url = 'https://api.themoviedb.org/3/movie/popular?api_key=31a40805676bdd5d1f2295449e6165c1&language=en-US&page=1'\n    \n      fetchPopular(url);\n\n  }, [])\n\n\n  const fetchMovies = async (url) => {\n   \n    try {\n      const res = await fetch(url);\n      console.log(res)\n      if (res.status !== 200) {\n        throw new Error('Something went wrong.');\n      }\n\n      setMovieData(await res.json());    \n    } catch (err) {\n        console.log(err);\n    }\n    \n    setFetchingSearch(false);\n\n    console.log('done loading');   \n    }\n\n  \n  useEffect(() => {\n\n    const url = (`https://api.themoviedb.org/3/search/movie?language=en-US&include_adult=false&page=1&api_key=31a40805676bdd5d1f2295449e6165c1&query=${searchInput}`)\n\n\n    if (fetchingSearch && searchInput !== '') {\n            fetchMovies(url);\n      }\n          \n      },[fetchingSearch])\n\n  \n  let popular = (<div></div>)\n\n  \n    popular = popularMovies.results.map((movies, index) => {\n\n      return (\n        <div className=\"popular\">\n          <div key={index}>{movies.original_title}</div>\n          <img src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movies.poster_path}`} alt=''></img>\n        </div>\n      )\n    })\n  \n  return (\n    <>\n      <Route exact path='/'>\n\n        <Search setSearchInput={setSearchInput} setFetchingSearch={setFetchingSearch}></Search>\n        {popular};\n        <Display movieData={movieData} fetching={fetchingSearch} popularMovies={popularMovies} searchInput={searchInput}></Display>\n      </Route>\n      <Route exact path='/:movies'><Details/></Route>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}